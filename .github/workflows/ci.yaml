name: "CI"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cross-host-version: [ "ubuntu:18.04", "ubuntu:20.04" ]
        include:
          - cross-host-version: "ubuntu:18.04"
            extra-version: "-ubuntu-18.04"
          - cross-host-version: "ubuntu:20.04"
            extra-version: ""
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # pin@v4.1.2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up QEMU for arm64
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # pin@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # pin@v2

      - name: Setting up an ARM64 docker image for cross-compilation
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # pin@v3
        with:
          file: Dockerfile.${{ matrix.cross-host-version }}
          platforms: linux/arm64
          push: false
          tags: plug_and_trust:arm64
          context: .
          outputs: type=docker


      - name: Build plug and trust
        run: |
          docker run --platform linux/arm64  -v ${GITHUB_WORKSPACE}:/work --pull=never plug_and_trust:arm64 bash -c " \
          mkdir build; \
          cd build; \
          cmake -DCMAKE_INSTALL_PREFIX=/work/results -DCPACK_PACKAGE_DIRECTORY=/work/results .. ; \
          make all install -j $(nproc); \
          "

      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3
        with:
          if-no-files-found: error
          name: orb-provison-artifacts${{ matrix.extra-version }}
          path: |
            ${{ github.workspace }}/results/
